version: '3.8'

services:
  app:
    container_name: pacific_app_website
    image: pacific_app_website-api-dev:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
    command: npm run start
    ports:
      - 8000:8000
    volumes:
      - ./src:/app/src
    env_file:
      - .env
    environment:
      APP_ENV: ${APP_ENV}
      APP_PORT: ${APP_PORT}
      DB_HOST: pgsqldb
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      NODE_OPTIONS: --max-old-space-size=4096
    depends_on:
      - pgsqldb
      - redis
    restart: unless-stopped

  pgsqldb:
    container_name: pacific_app_website_pgsqldb
    image: postgres:14.3
    env_file:
      - .env
    environment:
      POSTGRES_USER: '${DB_USER}'
      POSTGRES_PASSWORD: '${DB_PASS}'
      POSTGRES_DB: '${DB_NAME}'
    ports:
      - 5432:5432
    volumes:
      - pacific_app_website_pgsqldata:/var/lib/postgresql/data

  redis:
    container_name: pacific_app_website_redis
    restart: always
    image: redis:6.0-alpine
    ports:
      - '6379:6379'
    volumes:
      - pacific_app_website_redis_data:/data

volumes:
  pacific_app_website_redis_data:
  pacific_app_website_pgsqldata:

networks:
  default:
    external: true
    name: myapp
